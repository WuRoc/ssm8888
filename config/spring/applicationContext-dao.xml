<?xml version="1.0" encoding="UTF-8"?>

<beans  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns="http://www.springframework.org/schema/beans" 
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:aop="http://www.springframework.org/schema/aop" 
		xmlns:tx="http://www.springframework.org/schema/tx" 
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">
		
		<!--读取数据源配置文件  -->
	    <context:property-placeholder location="classpath:db.properties"/>
	    
	    <!--配置数据源对象 
	       dbcp连接池 -->
	    <bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	    	<property name="driverClassName" value="${jdbc.driver}"></property>
	    	<property name="url" value="${jdbc.url}"></property>
	    	<property name="username" value="${jdbc.username}"></property>
	    	<property name="password" value="${jdbc.password}"></property>
	    	
	    	<!--最大连接数  -->
<!-- 	    	<property name="maxActive" value="${jdbc.maxActive}"></property> -->
	    	<!--最大空闲连接数  -->
<!-- 	    	<property name="maxIdle" value="${jdbc.maxIdle}"></property> -->
	    	<!--初始化连接数  -->
<!-- 	    	<property name="initialSize" value="${jdbc.initialSize}"></property> -->
	    </bean>
	    
	    
	   <!-- 配置SqlSession工厂对象，该类在整合包中 -->
	   <bean  name="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	      
	      <!--数据源  -->
	      <property name="dataSource" ref="dataSource"></property>
	      <!--mybatis核心配置文件 -->
	      <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
	   </bean>
		
		
			<!--有上面的方法，当接口比较多的时候，要配置多个bean元素，麻烦
			    需求：配置接口所在的包 ，能帮我们创建该包下所有接口的实现类对象 -->
		    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		       <!--sqlSessionFactory对象不需要注入，因为该类会到spring容器中自动查找 一个
		          SqlSessionFactoryBean类型的对象  -->
		       <!--注入接口所在包名  -->
		       <property name="basePackage" value="edu.dao"></property>
		    </bean>
		    
		 
		   
		  
		    
</beans>